name: Tox Tests

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, devel]
  pull_request:
    branches: [main, devel]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    # strategy:
    #   matrix:
    #     python-version: [3.9]
    # python-version: [3.6, 3.7, 3.8, 3.9]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install nsc
        run: |
          wget https://github.com/nats-io/nsc/releases/download/2.7.1/nsc-linux-amd64.zip -O nsc-linux-amd64.zip
          sudo unzip nsc-linux-amd64.zip -d /usr/local/bin
      - name: Wait for services
        run: |
          make docker-up-ci
          python -m pip install -r dev-requirements.txt
      - name: Run Tox
        run: |
          export NSC_STORE="$PWD/.nats/stores"
          export NSC_HOME="$PWD/.nats/config"
          export NKEYS_PATH="$PWD/.nats/keys"
          python -m pip install -r dev-requirements.txt reqirements.txt
          python manage.py nsc_init --outdir "$PWD/.nats"
          docker-compose -f docker/test.yml restart nats
          python manage.py nsc_push
          nsc env -o DjangoOperator
          nsc env
          tox
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true
